stages:
  - deploy

variables:
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      when: always
    - if: $CI_COMMIT_REF_NAME == "dev"
      when: always
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always

remote-docker:
  stage: deploy
  environment: $CI_COMMIT_REF_NAME
  image: docker.io/docker:24.0
  only:
    - branches
  variables:
    DOCKER_HOST: "ssh://$DEPLOY_SSH_USER@$DEPLOY_HOSTNAME"
  before_script:
    - echo "$RUNTIME_ENV" > runtime.env
    - echo "Adding SSH Key"
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SSH_KEY" > ~/.ssh/gitlab
    - chmod 400 ~/.ssh/gitlab
    - echo 'IdentityFile ~/.ssh/gitlab' > ~/.ssh/config
    - ssh-keyscan -H $DEPLOY_HOSTNAME >> ~/.ssh/known_hosts
  script:
    - |
      # Create docker network (envidat)
      ssh "$DEPLOY_SSH_USER@$DEPLOY_HOSTNAME" "docker network create envidat"
      # Copy templates dir
      USER_DIR=$(echo "/home/$DEPLOY_SSH_USER")
      ssh "$DEPLOY_SSH_USER@$DEPLOY_HOSTNAME" "mkdir -p $USER_DIR/config/email-relay/$CI_COMMIT_REF_NAME"
      scp -r templates "$DEPLOY_SSH_USER@$DEPLOY_HOSTNAME:$USER_DIR/config/email-relay/$CI_COMMIT_REF_NAME/"
      docker compose \
        --project-name="email-relay-${CI_COMMIT_REF_NAME}" \
        --file "docker-compose.$CI_COMMIT_REF_NAME.yml" \
        up --detach --force-recreate
